name: Build C++ Executable

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  BUILD_TYPE: Release
  VCPKG_ROOT: ${{ github.workspace }}/vcpkg

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      # Setup vcpkg
      - name: Clone vcpkg
        uses: actions/checkout@v4
        with:
          repository: microsoft/vcpkg
          path: vcpkg

      - name: Setup vcpkg
        shell: bash
        run: |
          cd $VCPKG_ROOT
          ./bootstrap-vcpkg.sh -disableMetrics

      # Cache vcpkg packages
      - name: Cache vcpkg packages
        uses: actions/cache@v3
        with:
          path: |
            ${{ env.VCPKG_ROOT }}/installed
            ${{ env.VCPKG_ROOT }}/packages
          key: vcpkg-ubuntu-${{ hashFiles('**/vcpkg.json', '**/vcpkg_manifest.json') }}
          restore-keys: vcpkg-ubuntu-

      # Configure CMake
      - name: Configure CMake
        run: |
          cmake -B ${{ github.workspace }}/build -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }} -DCMAKE_TOOLCHAIN_FILE=${{ env.VCPKG_ROOT }}/scripts/buildsystems/vcpkg.cmake

      # Build
      - name: Build
        run: cmake --build ${{ github.workspace }}/build --config ${{ env.BUILD_TYPE }} --target streams_exec

      # Find executable path
      - name: Find executable path
        id: find_exe
        shell: bash
        run: |
          EXEC_PATH="${{ github.workspace }}/build/streams/streams_exec"
          echo "Execute check if file exists"
          ls -la $(dirname "$EXEC_PATH")
          echo "executable_path=$EXEC_PATH" >> $GITHUB_OUTPUT

      # Upload artifact
      - name: Upload executable artifact
        uses: actions/upload-artifact@v4
        with:
          name: streams_exec-ubuntu
          path: ${{ steps.find_exe.outputs.executable_path }}